"use strict";var ApplicationConfiguration=function(){var applicationModuleName="ibloggr",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("blogs"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("blogs").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Blogs","blogs","dropdown","/blogs(/create)?"),Menus.addSubMenuItem("topbar","blogs","New Blog","blogs/create")}]),angular.module("blogs").config(["$stateProvider",function($stateProvider){$stateProvider.state("createBlog",{url:"/blogs/create",templateUrl:"modules/blogs/views/create-blog.client.view.html"}).state("viewBlog",{url:"/blogs/:blogId",templateUrl:"modules/blogs/views/view-blog.client.view.html"}).state("editBlog",{url:"/blogs/:blogId/edit",templateUrl:"modules/blogs/views/edit-blog.client.view.html"}).state("otherwise",{url:"#!/"})}]),angular.module("blogs").controller("BlogsController",["$scope","$stateParams","$location","Authentication","Blogs","Comments","Likes",function($scope,$stateParams,$location,Authentication,Blogs,Comments,Likes){$scope.authentication=Authentication,$scope.liked=!1,$scope.create=function(){var blog=new Blogs({title:this.title,content:this.content});blog.$save(function(response){$location.path("blogs/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content=""},$scope.createComment=function(){var comment=new Comments({blogId:$scope.blog._id,commbody:$scope.commbody});comment.$save(function(response){$scope.blog=response},function(errorResponse){$scope.error=errorResponse.data.message}),$scope.commbody=""},$scope.remove=function(blog){if(blog){blog.$remove();for(var i in $scope.blogs)$scope.blogs[i]===blog&&$scope.blogs.splice(i,1)}else $scope.blog.$remove(function(){$location.path("/")})},$scope.checkBlog=function(){return console.log("in here"),"undefined"==typeof $scope.blog.length?(console.log("true"),!0):void console.log($scope.blog.length)},$scope.update=function(){var blog=$scope.blog;blog.$update(function(){$location.path("blogs/"+blog._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.findOne=function(){""!==$stateParams.blogId?Blogs.get({blogId:$stateParams.blogId},function(response){$scope.blog=response},function(errorResponse){$scope.errorMess=errorResponse}):$scope.errorMess="Oops!! Blog doesn't exist"},$scope.deleteComment=function(comment){var comm=new Comments({blogId:$scope.blog._id,_id:comment._id,commOwner:comment.commOwner});comm.$remove(function(response){$scope.blog=response})},$scope.checkLikes=function(likes){for(var i in likes)if(likes[i].user===$scope.authentication.user._id)return $scope.liked=!0,!0;return!1},$scope.removeError=function(){$scope.likeError=null},$scope.likeBlog=function(){var like=new Likes({blogId:$scope.blog._id,dest:"like"});like.$save(function(response){$scope.blog=response,$scope.liked=!0},function(errorResponse){$scope.likeError=errorResponse.data.message})},$scope.unlikeBlog=function(){var unlike=new Likes({blogId:$scope.blog._id,dest:"unlike"});unlike.$destroy(function(response){$scope.blog=response,$scope.liked=!1},function(errorResponse){$scope.likeError=errorResponse.data.message})}}]),angular.module("blogs").factory("Blogs",["$resource",function($resource){return $resource("blogs/:blogId",{blogId:"@_id"},{update:{method:"PUT"}})}]),angular.module("blogs").factory("Comments",["$resource",function($resource){return $resource("blogs/:blogId/comments/:commId",{blogId:"@blogId",commId:"@_id"})}]),angular.module("blogs").factory("Likes",["$resource",function($resource){return $resource("blogs/:blogId/:dest",{},{save:{method:"POST",params:{dest:"like",blogId:"@blogId"}},destroy:{method:"DELETE",params:{dest:"unlike",blogId:"@blogId"}}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","Blogs",function($scope,Authentication,Blogs){$scope.authentication=Authentication,$scope.find=function(){$scope.blogs=Blogs.query()}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null;break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.EMAIL_REGEXP=/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/,$scope.url_regex=/^(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})?$/,$scope.choiceOne=[{id:"choice1"},{id:"choice2"}],$scope.choiceTwo=[{id:"choice1"},{id:"choice2"}],$scope.optionOne=[],$scope.optionTwo=[],$scope.questions=[],$scope.selected="",$scope.setShow=function(val){$scope.selected=val},$scope.isSelected=function(val){return val===$scope.selected},$scope.addNewChoice=function(num){var newItemNo;1===num?(newItemNo=$scope.choiceOne.length+1,$scope.choiceOne.push({id:"choice"+newItemNo})):(newItemNo=$scope.choiceTwo.length+1,$scope.choiceTwo.push({id:"choice"+newItemNo}))},$scope.deleteChoice=function(index,num){1===num?2===$scope.choiceOne.length?alert("sorry u can't touch this"):($scope.choiceOne.splice(index,1),$scope.optionOne.splice(index,1),changeIds($scope.choiceOne)):2===$scope.choiceTwo.length?alert("sorry u can't touch this"):($scope.choiceTwo.splice(index,1),$scope.optionTwo.splice(index,1),changeIds($scope.choiceTwo))};var changeIds=function(array){for(var i in array)array[i].id="choice"+i};$scope.showAddChoice=function(choice,num){return 1===num?choice.id===$scope.choiceOne[$scope.choiceOne.length-1].id:choice.id===$scope.choiceTwo[$scope.choiceTwo.length-1].id},$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.removeError=function(){$scope.error=null}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.EMAIL_REGEXP=/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/,$scope.url_regex=/^(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})?$/,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.removeAlert=function(message){"error"===message?$scope.error=null:$scope.success=null},$scope.findUser=function(){$http.get("/users/me").success(function(response){$scope.owner=response})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.owner);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$scope.userForm.$setPristine(),$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").directive("ngConfirmField",function(){return{require:"ngModel",scope:{confirmAgainst:"="},link:function(scope,iElement,iAttrs,ngModelCtrl){var updateValidity=function(){var viewValue=ngModelCtrl.$viewValue,isValid=isFieldValid();return ngModelCtrl.$viewValue&&ngModelCtrl.$setValidity("noMatch",isValid),isValid?viewValue:void 0},isFieldValid=function(){return ngModelCtrl.$viewValue===scope.confirmAgainst};ngModelCtrl.$parsers.push(updateValidity),scope.$watch("confirmAgainst",updateValidity)}}}),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);